use Test;

use lib "lib";
plan 10;

use RakuLox::LoxGrammar;
use RakuLox::LoxActions;
use RakuLox::LoxInterpreter;


my $actions = LoxActions.new;
my $parser = LoxGrammar.new;
my $interpreter = LoxInterpreter.new;

# my $code = q:to/END/; a / 3 * 3 or 2 or 1 and 2 == 2 != 0 > 3 <= 23; END
my $code = q:to/END/;
3 / 3 * -5;
3 * -3 * -5/0.5;
"abc" + "defg";
3 > 2;
3 >= 2;
1 < 2;
2 <= 2;
2 == 2;
2 != 32;
END


my $ast = $parser.parse($code, :actions($actions)).made;
ok $ast, "Successfully parsed";
my $result = $interpreter.interpret($ast);
ok $result[0] eq -5, "Calculates to -5";
ok $result[1] eq 90, "Calculates to 90";
ok $result[2] eq "abcdefg", "Should be abcdefg";
ok $result[3], "Should be true";
ok $result[4], "Should be true";
ok $result[5], "Should be true";
ok $result[6], "Should be true";
ok $result[7], "Should be true";
ok $result[8], "Should be true";

done-testing;

