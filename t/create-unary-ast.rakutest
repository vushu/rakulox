use Test;

use lib "lib";
use-ok "RakuLox";

use RakuLox::LoxGrammar;
use RakuLox::LoxActions;
use RakuLox::LoxInterpreter;

my $actions = LoxActions.new;
my $parser = LoxGrammar.new;
my $interpreter = LoxInterpreter.new;

my $code = q:to/END/;
4 * (4 + 5) * -4;
-4;
END


my $ast = $parser.parse($code, :actions($actions)).made;
if $ast {
    my $res = $interpreter.interpret($ast);
    say $res;
    ok $res[0] eq -144, "Calculates to -144";
    ok $res[1] eq -4, "Should be -4";
}
else {
    say "Failed to parse";
}

$code = q:to/END/;
"4" + 4;
END

$ast = $parser.parse($code, :actions($actions)).made;
if $ast {
    dies-ok { $interpreter.interpret($ast) }, "Should die because operands must both either be strings or numbers, when using + operator.";
}
else {
    say "Failed to parse";
}

$code = q:to/END/;
"4" * 4;
END

$ast = $parser.parse($code, :actions($actions)).made;
if $ast {
    dies-ok { $interpreter.interpret($ast) }, "Should die because operand must be a number, when using * operator.";
}
else {
    say "Failed to parse";
}

